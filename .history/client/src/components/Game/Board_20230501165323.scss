// @font-face {
//   font-family: "Clear Sans";
//   src: url("../src/clear-sans.ttf") format("truetype");
// }

body {
  display: flex;
  //   background: rgb(2,0,36);
  // background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(87,64,124,1) 47%, rgba(0,212,255,1) 100%);
  //   color: white;
  // flex-direction: column;
  // justify-content: center;
  // align-content: center;
  // align-items: center;
  font-family: "Clear Sans", sans-serif;
  // font-size: 21px;
}

.text {
  // order: 2;
  // padding-top: 40px;
  // width: 440px;
  // font-weight: bold;
}
// main {
//   min-height: 90vh;
// }

// .wrapper {
//   display: flex;
//   flex-direction: column;
//   height: 100%;
// }
// .content {
//   flex: 1 0 auto;
// }
// .footer {
//   flex: 0 0 auto;
// }

.board {
  // order: 1;
  // display: inline-block;

  display: block;
  // justify-content: center;
  margin-left: auto;
  margin-right: auto;
  width: 440px;
  height: 440px;
  // padding: 5px; //вернути треба
  background-color: rgb(131, 168, 180);
  border-radius: 3px;
  // outline: none;
  position: relative;
}

// .board .cell,
// .tile {
//   // user-select: none;
//   // cursor: default;
// }

.details-box {
  display: flex;
  align-items: center;
  padding: 10px;
  justify-content: space-between;
}

.resetButton {
  background-color: rgb(131, 168, 180);
  color: rgb(255, 255, 255);
  cursor: pointer;
  font-size: 25px;
  // padding: 10px 20px;
  border-radius: 3px;
  transition: color 0.3s ease, background-color 0.3s ease;
  &:hover {
    background-color: rgb(131, 168, 180);
    color: rgba(255, 255, 255, 1);
  }
}

.score-header {
  font-size: 1rem;
}

.score-box {
  background-color: rgb(131, 168, 180) 6;
  color: rgb(129, 2, 2);
  // min-width: 50px;
  // width: 70px;
  // padding: 5px 15px;
  border-radius: 3px;
}

.cell,
.tile {
  // display: inline-block;
  width: 100px;
  height: 100px;
  margin: 5px;
  // line-height: 90px;
  display: inline-block;
  font-size: 30px;
  font-weight: bold;
  text-align: center;
  vertical-align: middle;
  border-radius: 3px;
  // font-family: "Clear Sans";
  color: rgb(8, 4, 4);
  background-color: rgb(224, 236, 240);
}

.tile0 {
  background-color: rgb(238, 247, 249);
}

.tile2 {
  background-color: rgb(224, 240, 245);
  // background-image: url(./assets/img/2.gif);
}

.tile4 {
  background-color: rgb(199, 221, 228);
  // background-image: url(./assets/img/4.gif);
}

.tile8 {
  background-color: rgb(187, 212, 220);
  // background-image: url(./assets/img/8.gif);
}

.tile16 {
  background-color: rgb(171, 195, 203);
  // background-image: url(./assets/img/16.gif);
}

.tile32 {
  background-color: rgb(140, 165, 174);
  // background-image: url(./assets/img/32.gif);
}

.tile64 {
  background-color: rgb(116, 144, 153);
  // background-image: url(./assets/img/64.gif);
}

.tile128 {
  background-color: rgb(98, 125, 134);
  // background-image: url(./assets/img/128.gif);
}

.tile256 {
  background-color: rgb(71, 91, 98);
  // background-image: url(./assets/img/256.gif);
  font-size: 45px;
}

.tile512 {
  background-color: rgb(45, 68, 75);
  // background-image: url(./assets/img/512.gif);
  font-size: 45px;
}

.tile1024 {
  background-color: rgb(40, 68, 78);
  // background-image: url(./assets/img/1024.gif);
  font-size: 35px;
}

.tile2048 {
  position: absolute;
  background-size: contain;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  padding: 0px;
  background-color: rgb(12, 42, 52);
  // background-image: url(./assets/img/2048.gif);
  font-size: 35px;
}

.try-again {
  z-index: 10;
  height: 100px;
  width: 100px;
  // background-image: url(./assets/img/try-again.gif);
}

.tile {
  position: absolute;
}

.tile.merged {
  display: none;
}

// .tile.merged.isMoving {
//   display: inline;
// }

.tile.new {
  animation-duration: 0.3s;
  animation-name: newTile;
  animation-fill-mode: forwards;
  // animation-delay: 0.15s;
  transform: scale(0);
}
// .tile.random {
//   animation-duration: 3s;
//   animation-name: newTile;
//   animation-fill-mode: forwards;
//   // animation-delay: 0.15s;
//   transform: scale(0);
// }

@keyframes newTile {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

// .overlay {
//   position: absolute;
//   top: 0px;
//   bottom: 0px;
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
//   text-align: center;
//   left: 0px;
//   right: 0px;
//   font-size: 55px;
//   font-weight: bolder;
//   border-radius: 7px;
// }

// .tryAgain {
//   background-color: #876;
//   color: #fff;
//   height: 40px;
//   width: 200px;
//   font-size: 20px;
//   font-weight: bold;
//   cursor: pointer;
//   border: none;
//   border-radius: 5px;
//   border: 2px solid white;
// }

// .gameOver {
//   background-size: contain;
//   background-image: url(./assets/img/game-over.gif);
//   position: absolute;
//   top: 0;
//   right: 0;
//   bottom: 0;
//   left: 0;
//   z-index: 100;
//   text-align: center;
// }

.overlay .message {
  color: #666;
}

@for $row from 0 through 3 {
  @for $column from 0 through 3 {
    .position_#{$row}_#{$column}:not(.isMoving) {
      top: 110px * $row;
      left: 110px * $column;
    }
  }
}

@for $fromRow from 0 through 3 {
  @for $toRow from 0 through 3 {
    $name: row_from_#{$fromRow}_to_#{$toRow};

    @if $fromRow == $toRow {
      .#{$name} {
        top: 110px * $toRow;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          top: 110px * $fromRow;
        }
        to {
          top: 110px * $toRow;
        }
      }
    }
  }
}

@for $fromColumn from 0 through 3 {
  @for $toColumn from 0 through 3 {
    $name: column_from_#{$fromColumn}_to_#{$toColumn};

    @if $fromColumn == $toColumn {
      .#{$name} {
        left: 110px * $toColumn;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          left: 110px * $fromColumn;
        }
        to {
          left: 110px * $toColumn;
        }
      }
    }
  }
}
